#This was a sample code generated by chatGPT 
def calculate_present_value(initial_withdrawal, growth_rate, interest_rate, years):
    """
    Calculate the present value of future withdrawals growing with inflation.
    """
    present_value = 0
    for t in range(1, years + 1):
        # Adjust withdrawal for inflation and discount to the present value
        withdrawal_t = initial_withdrawal * (1 + growth_rate) ** (t - 1)
        present_value += withdrawal_t / (1 + interest_rate) ** t
    return present_value

# Main function
if __name__ == "__main__":
    # Default values
    default_retire_in = 10  # Retire in 10 years
    default_initial_withdrawal = 125000  # Expenses in today's dollars
    default_growth_rate = 0.03  # Annual inflation rate (3%)
    default_interest_rate = 0.05  # Return on investment (5%)
    default_years = 30  # Years of income needed after retirement

    # Prompt the user for inputs, using defaults if input is empty
    try:
        retire_after = input(f"Enter number of years to retire in (default {default_retire_in}): ")
        retire_after = int(retire_after) if retire_after else default_retire_in

        initial_withdrawal = input(f"Enter expenses per year in today's dollars (default {default_initial_withdrawal}): ")
        initial_withdrawal = float(initial_withdrawal) if initial_withdrawal else default_initial_withdrawal

        growth_rate = input(f"Enter expected annual inflation rate (default {default_growth_rate}): ")
        growth_rate = float(growth_rate) if growth_rate else default_growth_rate

        interest_rate = input(f"Enter expected investment return rate (default {default_interest_rate}): ")
        interest_rate = float(interest_rate) if interest_rate else default_interest_rate

        years = input(f"Enter expected number of years income needed after retirement (default {default_years}): ")
        years = int(years) if years else default_years

        # Calculate the amount needed
        value_till_start_retire = calculate_present_value(
            initial_withdrawal, growth_rate, interest_rate, retire_after
        )
        value_till_end_retire = calculate_present_value(
            initial_withdrawal, growth_rate, interest_rate, years + retire_after
        )
        present_value_needed = value_till_end_retire - value_till_start_retire

        # Print the result
        print(f"\nTo withdraw ${initial_withdrawal:,.2f} in today's dollars, "
              f"retiring after {retire_after} years with an inflation rate of {growth_rate*100:.2f}% per year, "
              f"and earning {interest_rate*100:.2f}% annual return over {years} years, "
              f"you would need ${present_value_needed:,.2f} in today's dollars. "
              f"Before retirement, you would need ${value_till_end_retire:,.2f}.")
    except ValueError:
        print("Invalid input! Please enter numeric values for amounts, rates, and years.")
